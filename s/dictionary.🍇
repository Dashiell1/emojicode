🎍🛢 🔏 🐇 🐝🐚Key ⚪️ Element ⚪🍆️ 🍇
  🖍🆕 next 🍬🐝🐚Key Element🍆
  🖍🆕 key Key
  🖍🆕 element Element
  🖍🆕 hash 🔢

  🆕 🍼key Key 🍼element Element 🍼 hash 🔢 🍇
    🤷‍♀️➡️🖍next
  🍉

  🆕👥 pair 🐝🐚Key Element🍆️ 🍇
    🐽pair❗️ ➡️🖍element
    🔑pair❗️ ➡️🖍key
    ⚗️pair❗️ ➡️🖍hash

    ↪️ next ➡️ nextu 🍇
      🆕🐝🐚Key Element🍆👥 nextu❗️➡️🖍next
    🍉
  🍉

  ❗️ 🐽 ➡️ Element 🍇
    ↩️ element
  🍉

  ❗️ 🐷 ele Element 🍇
    ele ➡️🖍element
  🍉

  ❗️ 🔑 ➡️ Key 🍇
    ↩️ key
  🍉

  ❗️ ⚗️ ➡️ 🔢 🍇
    ↩️ hash
  🍉

  ❗️ ⏭ ➡️ 🍬🐝🐚Key Element🍆 🍇
    ↩️ next
  🍉

  ❗️ 🥌 newEntry 🍬🐝🐚Key Element🍆 🍇
    newEntry➡️🖍next
  🍉

  ❗️ 🐻 newEntry 🐝🐚Key Element🍆 🍇
    🐕 ➡️ 🖍🆕prev
    next ➡️ 🖍🆕entry?
    🔁 entry? ➡️ entry 🍇
      entry ➡️ 🖍prev
      ⏭entry❗ ➡️ 🖍entry?
    🍉
    🥌 prev newEntry❗️
  🍉
🍉

🐇 🌸🐚Element ⚪🍆️ 🍇
  🖍🆕 capacity 🔢
  🖍🆕 data 🧠

  🆕 🍼capacity🔢 🍇
    ☣️ 🍇
      capacity✖️⚖️🍬🐝🐚🔡Element🍆 ➡️ length
      🆕🧠🆕 length❗️ ➡️ 🖍data
      ✍️ data 0 0 length❗
    🍉
  🍉

  🆕👥 storage 🌸🐚Element🍆 🍇
    🐴storage❓ ➡️ 🖍capacity

    ☣️ 🍇
      🆕🧠🆕 capacity✖️⚖️Element❗️ ➡️ 🖍data
      🔂 i 🆕⏩⏩ 0 capacity❗️ 🍇
        ↪️🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠storage❗️ i✖️⚖️🍬🐝🐚🔡Element🍆❗️ ➡️ v 🍇
          🆕🐝🐚🔡Element🍆👥 v❗️➡️pair
          pair ➡️🐽🐚🍬🐝🐚🔡Element🍆🍆 data i✖️⚖️🍬🐝🐚🔡Element🍆❗️
        🍉
        🙅‍♀️🍇
          🤷‍♂️ ➡️🐽🐚🍬🐝🐚🔡Element🍆🍆 data i✖️⚖️🍬🐝🐚🔡Element🍆❗️
        🍉
      🍉
    🍉
  🍉

  ❗️🧠 ➡️ 🧠 🍇
    ↩️ data
  🍉

  📗 Returns the lists current capacity. 📗
  ❓ 🐴 ➡️ 🔢 🍇
    ↩️ capacity
  🍉

  📗 Releases everything inside the list. 📗
  ☣️❗️♻️ 🍇
    🔂 i 🆕⏩⏩ 0 capacity❗️ 🍇
      ♻️🐚🍬🐝🐚🔡Element🍆🍆 data i✖️⚖️🍬🐝🐚🔡Element🍆❗
    🍉
  🍉

  ♻️ 🍇
    ☣️ 🍇
      ♻️❗️
    🍉
  🍉
🍉

📗
  Dictionary, holding key value pairs.

  Dictionaries allow you to associate keys with values. 🍯 is implemented as a
  hash table and is `O(1)` on average and `O(n)` in worth case.

  🍯 is a value type. This means that copies of 🍯 are independent:

  ```
  🍯 🔤Jane🔤 45 🔤Sharon🔤 22 🔤Bob🔤 64 🍆 ➡️ ages
  ages ➡️ 🖍🆕agesCopy
  46 ➡️ 🐽agesCopy 🔤Jane🔤❗️
  ```

  In the above example the dictionary in `ages` will still contain 45 for the
  key `🔤Jane🔤` as only `agesCopy` was modified.

  To learn more about dictionary literals [see the Language Reference.](../../reference/the-s-package.html#-dictionaries)
📗
🌍 🕊 🍯🐚Element ⚪🍆️ 🍇
  🖍🆕 data 🌸🐚Element🍆️
  🖍🆕 count 🔢

  🐇❗🛷 n 🔢 ➡️ 🔢 🍇
    ↪️ n ◀️ 7 🍇
      ↩️ 7
    🍉
    ↪️ n ◀️ 17 🍇
      ↩️ 17
    🍉
    ↪️ n ◀️ 29 🍇
      ↩️ 29
    🍉
    ↪️ n ◀️ 47 🍇
      ↩️ 47
    🍉
    ↪️ n ◀️ 167 🍇
      ↩️ 167
    🍉
    ↪️ n ◀️ 229 🍇
      ↩️ 229
    🍉
    ↪️ n ◀️ 331 🍇
      ↩️ 331
    🍉
    ↪️ n ◀️ 599 🍇
      ↩️ 599
    🍉
    ↪️ n ◀️ 1423 🍇
      ↩️ 1423
    🍉
    ↪️ n ◀️ 3221 🍇
      ↩️ 3221
    🍉
    ↪️ n ◀️ 7159 🍇
      ↩️ 7159
    🍉

    ↩️ n✖️2
  🍉

  📗 Prepare this dictionary for mutation. 📗
  🥯🖍🔒❗️📝 🍇
    ↪️ ❎🏮data❗️🎍🐌🍇
      🆕🌸🐚Element🍆👥 data❗️ ➡️ 🖍data
    🍉
  🍉

  📗 Creates an empty 🍯. 📗
  🥯🆕 🐸 🍇
    0 ➡️ 🖍count
    🆕🌸🐚Element🍆️🆕 7❗️➡️ 🖍data
  🍉

  📗 Creates an empty 🍯 with a capacity of at least *minCapacity*. 📗
  🆕 🐴 minCapacity 🔢 🍇
    0 ➡️ 🖍count
    🆕🌸🐚Element🍆️🆕 🛷🕊🍯🐚Element🍆 minCapacity❗️❗️➡️ 🖍data
  🍉

  🔒❓ 🔑 entry 🐝🐚🔡Element🍆 key 🔡 hash 🔢 ➡️ 👌 🍇
    ↪️ hash 🙌 ⚗️entry❗️ 🍇
      ↩️ key 🙌 🔑entry❗
    🍉
    ↩️ 👎
  🍉

  🥯🔒❗ 🔍 key 🔡 ➡️ 🍬🐝🐚🔡Element🍆 🍇
    ⚗️key❗➡️ hash
    hash🚮🐴data❓ ➡️ index

    ☣️ 🍇
      🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ index✖️⚖️🍬🐝🐚🔡Element🍆❗ ➡️ 🖍🆕entry?
    🍉

    🔁 entry? ➡️ entry 🍇
      ↪️ 🔑🐕 entry key hash❓️ 🍇
        ↩️️ entry
      🍉
      ⏭entry❗ ➡️ 🖍entry?
    🍉

    ↩️️ 🤷‍♀️
  🍉

  📗
    Returns the value assigned to *key*. If key is not in the 🍯 no value is
    returned.
  📗
  🥯❗️ 🐽 key 🔡 ➡️ 🍬Element 🍇
    ↪️ 🔍🐕 key❗️ ➡️ entry 🍇
      ↩️ 🐽entry❗
    🍉
    ↩️ 🤷‍♀️
  🍉

  📗
    Removes *key* and its assigned value from the 🍯. No action is performed if
    *key* is not in the 🍯.
  📗
  🥯🖍❗️ 🐨 key 🔡 🍇
    📝❗️
    ⚗️key❗➡️ hash
    hash🚮🐴data❓ ➡️ index

    ☣️ 🍇
      🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ index✖️⚖️🍬🐝🐚🔡Element🍆❗ ➡️ 🖍🆕entry?
    🍉

    ↪️ entry? ➡️ entry 🍇
      ↪️ 🔑entry❗️️ 🙌 key 🍇
        ☣️ 🍇
          index✖️⚖️🍬🐝🐚🔡Element🍆  ➡️ offset
          ♻️🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ offset❗
          ⏭entry❗️️ ➡️🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ offset❗
        🍉
        count ⬅️➖ 1
        ↩️️↩️️
      🍉
      entry ➡️ 🖍🆕prev
      🔁 entry? ➡️ entry 🍇
        ↪️ 🔑🐕 entry key hash❓️️ 🍇
          🥌 prev ⏭entry❗️️❗️
          count ⬅️➖ 1
          ↩️️↩️️
        🍉
        entry ➡️ 🖍prev
        ⏭entry❗ ➡️ 🖍entry?
      🍉
    🍉
  🍉

  📗 Assings a value to the provided key. 📗
  🥯🖍➡️🐽 value Element key 🔡 🍇
    📝❗️
    ↪️ 🔍🐕 key❗️➡️ entry 🍇
      🐷 entry value❗️
      ↩️↩️
    🍉

    🦕🐕❗

    count ⬅️➕ 1
    ⚗️key❗➡️ hash
    hash🚮🐴data❓ ➡️ index
    🆕🐝🐚🔡Element🍆🆕 key value hash❗️ ➡️ entry

    ☣️ 🍇
      🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ index✖️⚖️🍬🐝🐚🔡Element🍆❗ ➡️ entry?
    🍉

    ↪️ entry? ➡️ anEntry 🍇
      🐻 anEntry entry❗️
      ↩️↩️
    🍉

    ☣️ 🍇
      index✖️⚖️🍬🐝🐚🔡Element🍆 ➡️ offset
      ♻️🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ offset❗
      entry ➡️ 🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ offset❗
    🍉
  🍉

  🥯🖍🔒❗🦕️ 🍇
    ↪️ 💯count❗️➗💯🐴data❓❗▶️ 0.75 🎍🐌🍇️
      data ➡️ oldData
      🐴data❓ ➡️ oldCapacity

      0 ➡️ 🖍count
      🆕🌸🐚Element🍆️🆕 🛷🕊🍯🐚Element🍆 🐴data❓❗️❗️➡️ 🖍data

      🔂 i 🆕⏩⏩ 0 oldCapacity❗️ 🍇
        i✖️⚖️🍬🐝🐚🔡Element🍆 ➡️ offset
        ☣️ 🍇
          🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠oldData❗️ offset❗ ➡️ 🖍🆕entry?
        🍉
        🔁 entry? ➡️ entry 🍇
          🐽entry❗ ➡️ 🐽🐕 🔑entry❗❗
          ⏭entry❗ ➡️ 🖍entry?
        🍉
      🍉
    🍉
  🍉

  📗
    Returns a list consisting of all keys in this 🍯.

    >!N Note that the keys in the returned list are arbitrarily ordered.

  📗
  ❗️ 🐙 ➡️ 🍨🐚🔡🍆 🍇
    🆕🍨🐚🔡🍆🐴count❗➡️ 🖍🆕list
    🔂 i 🆕⏩⏩ 0 🐴data❓❗️ 🍇
      ☣️ 🍇
        🐽🐚🍬🐝🐚🔡Element🍆🍆 🧠data❗️ i✖️⚖️🍬🐝🐚🔡Element🍆❗ ➡️ 🖍🆕entry?
      🍉
      🔁 entry? ➡️ entry 🍇
        🐻 list 🔑entry❗❗
        ⏭entry❗ ➡️ 🖍entry?
      🍉
    🍉
    ↩️ list
  🍉

  📗
    Removes all key-value pairs in this 🍯 and returns the number of deleted
    items.
  📗
  🖍❗️ 🐗 ➡️ 🔢 🍇
    📝❗️
    ☣️ 🍇
      ♻️ data❗️
    🍉
    count ➡️ oldCount
    0 ➡️ 🖍count
    ☣️ 🍇
      ✍️ 🧠data❗ 0 0 🐴data❓✖️⚖️🍬🐝🐚🔡Element🍆❗
    🍉
    ↩️ oldCount
  🍉

  📗 Checks whether *key* is in this 🍯. 📗
  ❗️ 🐣 key 🔡 ➡️ 👌 🍇
    ↩️ ❎🔍🐕 key❗ 🙌 🤷‍♀️❗️
  🍉

  📗 Returns the number of items. 📗
  ❗️ 🐔 ➡️ 🔢 🍇
    ↩️ count
  🍉
🍉
